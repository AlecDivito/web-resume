{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/socialFooter.js","webpack:///./src/components/logo.js","webpack:///./src/components/nav.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.js"],"names":["TextInput","_ref","fieldName","name","placeholder","type","_useState","useState","active","setActive","className","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","htmlFor","id","onFocus","onBlur","required","TextArea","_ref2","_useState2","rows","Button","_ref3","text","value","ContactPage","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","_components_header__WEBPACK_IMPORTED_MODULE_5__","isCenter","role","aria-label","action","method","acceptCharset","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","SocialFooter","external","email","href","map","e","key","link","target","rel","src","image","alt","Logo","_4065101138","react_default","gatsby_image_default","fluid","file","childImageSharp","Nav","links","navActive","onNavClick","gatsby_browser_entry","to","logo","onClick","filter","item","ready","index","activeClassName","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","Footer","siteLinks","s","i","Date","getFullYear","Layout","setNavActive","nav","allInternalNavJson","nodes","socialFooter","allExternalNavJson","components_footer","_3406259466","Header"],"mappings":"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","file":"component---src-pages-contact-js-5e23b28ab702d1430879.js","sourcesContent":["import React, {useState} from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"./contact.scss\";\nimport Header from \"../components/header\";\n\nconst TextInput = ({fieldName, name, placeholder, type}) => {\n  const [active, setActive] = useState(false);\n  const className = `field ${(active) ? \"active\" : \"\"}`;\n  return (\n    <div className={className}>\n      <label htmlFor={name}>{fieldName}</label>\n      <input type={type}\n        className=\"field__input\"\n        id={name}\n        name={name}\n        placeholder={placeholder}\n        onFocus={() => setActive(true)}\n        onBlur={() => setActive(false)}\n        required />\n    </div>\n  )\n}\n\nconst TextArea = ({fieldName, name, placeholder}) => {\n    const [active, setActive] = useState(false);\n    const className = `field ${(active) ? \"active\" : \"\"}`;\n  return (\n    <div className={className}>\n      <label htmlFor={name}>{fieldName}</label>\n      <textarea\n        className=\"field__input\"\n        rows=\"5\"\n        name={name}\n        placeholder={placeholder}\n        onFocus={() => setActive(true)}\n        onBlur={() => setActive(false)}\n        required\n      ></textarea>\n    </div>\n  );\n}\n\nconst Button = ({type, text}) => (\n  <input className=\"btn\" type={type} value={text}/>\n);\n\nconst ContactPage = () => (\n  <Layout>\n    <SEO title=\"Contact Me\" />\n    <div className=\"contact\">\n      <Header text=\"I Can't wait to learn more about you!\" isCenter={true} />\n      <p className=\"contact__text\">\n        Whether you just wanna say <span role=\"img\" aria-label=\"Hi\">🖐</span> ‘Hi’ or tell me about your next project,\n        please do not hesitate to drop a line <span role=\"img\" aria-label=\"Smiley Face\">😊</span>\n      </p>\n      <form className=\"contact__form\" action=\"https://formcarry.com/s/UArougfMt9W\" method=\"POST\" acceptCharset=\"UTF-8\">\n        {/* TODO: Add a topic drop down (stuff like general inquiry or work together or peep) */}\n        <TextInput type=\"text\" fieldName=\"Full Name\" name=\"name\" placeholder=\"You name\" />\n        <TextInput type=\"email\" fieldName=\"Email\" name=\"email\" placeholder=\"your@email\" />\n        <TextArea fieldName=\"Message\" name=\"message\" placeholder=\"Write a Message!\" />\n        <Button type=\"submit\" text=\"Send The Message\" />\n      </form>\n    </div>\n  </Layout>\n)\n\nexport default ContactPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport \"./socialFooter.scss\"\n\nconst SocialFooter = ({ external, email }) => (\n  <div className=\"footer--social\">\n    {(email) ?\n      <a href={`mailto:${email}`} className=\"footer--social__email\">\n        <span>Let's Talk</span>\n        <span>{email}</span>\n      </a>\n      : null\n    }\n    {external.map(e =>\n      <a key={e.id} href={e.link} className=\"footer--social__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={e.image} alt={e.alt} className=\"footer--social__icon\" />\n      </a>\n    )}\n  </div>\n)\n\nSocialFooter.propTypes = {\n  external: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired\n  })).isRequired,\n  email: PropTypes.string\n}\n\nexport default SocialFooter;\n\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query GetLogoImage {\n      file(relativePath: { eq: \"images/logo.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return <Img className=\"logo\" alt=\"Alec Di Vito logo\" fluid={data.file.childImageSharp.fluid} />\n}\n\nexport default Logo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport Logo from \"./logo\"\n\nconst Nav = ({ links, navActive, onNavClick, children }) => (\n  <nav className=\"nav\">\n    <div className=\"nav--header\">\n        <Link to=\"/\" className=\"nav__logo\">\n          <Logo />\n        </Link>\n\n        <div className=\"burger--wrapper\">\n        <div\n            className={`burger ${navActive ? \"burger--active\" : \"\"}`}\n            onClick={onNavClick}\n        />\n        </div>\n    </div>\n\n    <div className={`nav__mobile ${navActive ? \"nav__list--dropdown\" : \"\"}`}>\n      <div className=\"nav__list\">\n        {(links) ? links.filter(item => item.ready).map((item, index) => (\n        <Link\n            key={item.id}\n            to={item.link}\n            className=\"nav__list__item\"\n            activeClassName=\"nav__list__item--active\"\n        >\n            {item.title}\n        </Link>\n        )) : null}\n      </div>\n      <div className=\"nav__children\">\n        {children}\n      </div>\n    </div>\n  </nav>\n)\n\nNav.propTypes = {\n    links: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        ready: PropTypes.bool.isRequired\n    })).isRequired,\n    navActive: PropTypes.bool.isRequired,\n    onNavClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired\n}\n\nexport default Nav;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from 'prop-types';\nimport \"./footer.scss\";\n\nconst Footer = ({ siteLinks, children }) => (\n  <footer className=\"footer\">\n      <div className=\"footer__top layout--max-width\">\n        <div className=\"footer__top__about\">\n          <h3>Alec Di Vito</h3>\n          <p>\n            I'm a creative, ambitious, and enterprising software engineer as well as\n            an aspiring designer and machine learning engineer.\n          </p>\n        </div>\n        <div className=\"footer__top__blog\">\n          {/* <h3>Latest Blogs</h3>\n          <ul></ul> */}\n        </div>\n        <div className=\"footer__top__site\">\n          <h3>Site Links</h3>\n          <ul className=\"footer__top__site__list\">\n            {siteLinks.filter(s => s.ready).map((s, i) => (\n              <li key={i}>\n                <Link className=\"link\" to={s.link}>{s.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"footer__bottom layout--max-width\">\n        <div className=\"footer__bottom__copyright\">\n          Alec Divito © {new Date().getFullYear()}, Built with\n          {` `}\n          <a className=\"link\" href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a>\n        </div>\n        {children}\n      </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteLinks: PropTypes.arrayOf(PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    ready: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  children: PropTypes.node\n}\n\nexport default Footer;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Nav from \"./nav\";\nimport Footer from \"./footer\";\nimport SocialFooter from \"./socialFooter\";\nimport \"./layout.scss\";\n\nconst navData = graphql`\nquery GetNavData {\n  allExternalNavJson {\n    nodes {\n      id\n      image\n      link\n      alt\n    }\n  }\n  allInternalNavJson {\n    nodes {\n      id\n      link\n      ready\n      title\n    }\n  }\n  site {\n    siteMetadata {\n      email\n      title\n    }\n  }\n}\n`;\n\nconst Layout = ({ children }) => {\n  const [navActive, setNavActive] = useState(false);\n\n  return (\n    <StaticQuery query={navData} render={ data => (\n      <div className=\"page\">\n        <Nav\n          links={data.allInternalNavJson.nodes}\n          navActive={navActive}\n          onNavClick={() => setNavActive(!navActive)}\n        >\n          <SocialFooter\n            external={data.allExternalNavJson.nodes}\n            email={data.site.siteMetadata.email}\n          />\n        </Nav>\n        <main className=\"page--content\">{children}</main>\n          <Footer siteLinks={data.allInternalNavJson.nodes}>\n            <SocialFooter\n              external={data.allExternalNavJson.nodes}\n            />\n          </Footer>\n      </div>\n    )} />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./header.scss\";\n\nconst Header = ({text, isCenter}) => {\n    const className = `header ${(isCenter) ? \"header--center\" : \"\"}`;\n    return (\n        <header className={className}>\n            <h1 className=\"header__h1\">{text}</h1>\n        </header>\n    )\n}\n\nHeader.propTypes = {\n    text: PropTypes.string.isRequired,\n    isCenter: PropTypes.bool,\n}\n\nexport default Header;"],"sourceRoot":""}