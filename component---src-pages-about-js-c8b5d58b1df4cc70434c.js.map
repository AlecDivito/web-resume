{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/components/profilePicture.js","webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/socialFooter.js","webpack:///./src/components/logo.js","webpack:///./src/components/nav.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.js"],"names":["Image","data","_882816925","react_default","a","createElement","gatsby_image_default","fluid","file","childImageSharp","className","objectFit","objectPosition","alt","ProfilePicture","_1665300262","AboutPage","_1421397220","layout","seo","title","profilePicture","header","text","isCenter","gatsby_browser_entry","to","allAboutJson","nodes","map","_ref","id","details","link","section","key","description","i","components_image","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","SocialFooter","external","email","react__WEBPACK_IMPORTED_MODULE_1___default","href","e","target","rel","src","image","Logo","_4065101138","Nav","links","navActive","onNavClick","logo","onClick","filter","item","ready","index","activeClassName","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Footer","siteLinks","s","Date","getFullYear","Layout","_useState","useState","setNavActive","nav","allInternalNavJson","socialFooter","allExternalNavJson","components_footer","_3406259466","Header"],"mappings":"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","file":"component---src-pages-about-js-c8b5d58b1df4cc70434c.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query GetAboutMeRepairShop {\n      file(relativePath: { eq: \"images/Sheridan-Bike-Hub-repair.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n\n  return <Img fluid={data.file.childImageSharp.fluid}\n    className=\"profile-pic\"\n    objectFit=\"cover\"\n    objectPosition=\"50% 50%\"\n    alt=\"Alec Divito Profile Picture\" \n  />\n}\n\nexport default Image\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst ProfilePicture = () => {\n    const data = useStaticQuery(graphql`\n        query GetAboutMePicture{\n            file( relativePath: { eq: \"images/Profile_Pic_Alec_Divito.png\" } ) {\n                childImageSharp {\n                    fluid(maxWidth: 300) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n        }\n    `);\n\n    return <Img fluid={data.file.childImageSharp.fluid}\n        className=\"profile-pic\"\n        objectFit=\"cover\"\n        objectPosition=\"50% 50%\"\n        alt=\"Alec Divito Profile Picture\" />\n}\n\nexport default ProfilePicture;","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Image from \"../components/image\";\nimport ProfilePicture from \"../components/profilePicture\";\nimport \"./about.scss\";\nimport Header from \"../components/header\";\n\nconst query = graphql`\nquery AboutMeQuery {\n  allAboutJson {\n    nodes {\n      id\n      details\n      link\n      section\n    }\n  }\n}\n`;\n\nconst AboutPage = () => {\n  const data = useStaticQuery(query)\n  return (\n    <Layout>\n      <SEO title=\"About Me\" />\n      <section className=\"about layout--max-width\">\n        <div className=\"about__greetings\">\n          <ProfilePicture />\n          <div className=\"about__greetings__intro\">\n            <Header text=\"Nice to meet you\" isCenter={true} />\n            <p className=\"about__intro\">\n              My name is <strong>Alec Di Vito</strong>. I'm a creative, ambitious, and enterprising software engineer.\n            </p>\n            <p className=\"about__intro\">\n              Currently I'm looking for possible co-op opportunities for the 2020 Winter\n              and Summer semesters. If you like what you see and want to work with me\n              <strong><Link className=\"link\" to=\"/contact\">please get in touch.</Link></strong>\n            </p>\n          </div>\n        </div>\n        {data.allAboutJson.nodes.map( ({id, details, link, section}) => (\n          <div key={id} className=\"about__me\">\n            <h3 className=\"about__me__header\">{section}</h3>\n            <ul className=\"about__me__details\">\n              {details.map( (description, i) =>\n                <li key={i} className=\"about__me__details__item\">\n                  {description}\n                </li>\n              )}\n            </ul>\n            <div className=\"about__me__link\">\n              {(link) ?\n                <Link to={link} className=\"about__me__link link\">\n                  Learn More\n                </Link>\n                : null\n              }\n            </div>\n          </div>\n        ))}\n        <div className=\"about__greetings\">\n          <div className=\"about__greetings__intro\">\n            <Header text=\"That's not all I do\" isCenter={true} />\n            <p className=\"about__intro\">\n              I also really enjoy riding my bike and helping out\n              around the community. During the past summer, I helped out a bike shop\n              in Mississauga that is run parallel between Sherdian College and the City of\n              Mississauga.\n            </p>\n            <p className=\"about__intro\">\n              I love skating and was Head Skate Patrol at multiple different\n              rinks around Mississauga growing up. I really love the GTA and can't wait to\n              do more.\n            </p>\n          </div>\n          <Image />\n        </div>\n      </section>\n    </Layout>\n  );\n}\n\nexport default AboutPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport \"./socialFooter.scss\"\n\nconst SocialFooter = ({ external, email }) => (\n  <div className=\"footer--social\">\n    {(email) ?\n      <a href={`mailto:${email}`} className=\"footer--social__email\">\n        <span>Let's Talk</span>\n        <span>{email}</span>\n      </a>\n      : null\n    }\n    {external.map(e =>\n      <a key={e.id} href={e.link} className=\"footer--social__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={e.image} alt={e.alt} className=\"footer--social__icon\" />\n      </a>\n    )}\n  </div>\n)\n\nSocialFooter.propTypes = {\n  external: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired\n  })).isRequired,\n  email: PropTypes.string\n}\n\nexport default SocialFooter;\n\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query GetLogoImage {\n      file(relativePath: { eq: \"images/logo.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return <Img className=\"logo\" alt=\"Alec Di Vito logo\" fluid={data.file.childImageSharp.fluid} />\n}\n\nexport default Logo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport Logo from \"./logo\"\n\nconst Nav = ({ links, navActive, onNavClick, children }) => (\n  <nav className=\"nav\">\n    <div className=\"nav--header\">\n        <Link to=\"/\" className=\"nav__logo\">\n          <Logo />\n        </Link>\n\n        <div className=\"burger--wrapper\">\n        <div\n            className={`burger ${navActive ? \"burger--active\" : \"\"}`}\n            onClick={onNavClick}\n        />\n        </div>\n    </div>\n\n    <div className={`nav__mobile ${navActive ? \"nav__list--dropdown\" : \"\"}`}>\n      <div className=\"nav__list\">\n        {(links) ? links.filter(item => item.ready).map((item, index) => (\n        <Link\n            key={item.id}\n            to={item.link}\n            className=\"nav__list__item\"\n            activeClassName=\"nav__list__item--active\"\n        >\n            {item.title}\n        </Link>\n        )) : null}\n      </div>\n      <div className=\"nav__children\">\n        {children}\n      </div>\n    </div>\n  </nav>\n)\n\nNav.propTypes = {\n    links: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        ready: PropTypes.bool.isRequired\n    })).isRequired,\n    navActive: PropTypes.bool.isRequired,\n    onNavClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired\n}\n\nexport default Nav;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from 'prop-types';\nimport \"./footer.scss\";\n\nconst Footer = ({ siteLinks, children }) => (\n  <footer className=\"footer\">\n      <div className=\"footer__top layout--max-width\">\n        <div className=\"footer__top__about\">\n          <h3>Alec Di Vito</h3>\n          <p>\n            I'm a creative, ambitious, and enterprising software engineer as well as\n            an aspiring designer and machine learning engineer.\n          </p>\n        </div>\n        <div className=\"footer__top__blog\">\n          {/* <h3>Latest Blogs</h3>\n          <ul></ul> */}\n        </div>\n        <div className=\"footer__top__site\">\n          <h3>Site Links</h3>\n          <ul className=\"footer__top__site__list\">\n            {siteLinks.filter(s => s.ready).map((s, i) => (\n              <li key={i}>\n                <Link className=\"link\" to={s.link}>{s.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"footer__bottom layout--max-width\">\n        <div className=\"footer__bottom__copyright\">\n          Alec Divito © {new Date().getFullYear()}, Built with\n          {` `}\n          <a className=\"link\" href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a>\n        </div>\n        {children}\n      </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteLinks: PropTypes.arrayOf(PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    ready: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  children: PropTypes.node\n}\n\nexport default Footer;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Nav from \"./nav\";\nimport Footer from \"./footer\";\nimport SocialFooter from \"./socialFooter\";\nimport \"./layout.scss\";\n\nconst navData = graphql`\nquery GetNavData {\n  allExternalNavJson {\n    nodes {\n      id\n      image\n      link\n      alt\n    }\n  }\n  allInternalNavJson {\n    nodes {\n      id\n      link\n      ready\n      title\n    }\n  }\n  site {\n    siteMetadata {\n      email\n      title\n    }\n  }\n}\n`;\n\nconst Layout = ({ children }) => {\n  const [navActive, setNavActive] = useState(false);\n\n  return (\n    <StaticQuery query={navData} render={ data => (\n      <div className=\"page\">\n        <Nav\n          links={data.allInternalNavJson.nodes}\n          navActive={navActive}\n          onNavClick={() => setNavActive(!navActive)}\n        >\n          <SocialFooter\n            external={data.allExternalNavJson.nodes}\n            email={data.site.siteMetadata.email}\n          />\n        </Nav>\n        <main className=\"page--content\">{children}</main>\n          <Footer siteLinks={data.allInternalNavJson.nodes}>\n            <SocialFooter\n              external={data.allExternalNavJson.nodes}\n            />\n          </Footer>\n      </div>\n    )} />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./header.scss\";\n\nconst Header = ({text, isCenter}) => {\n    const className = `header ${(isCenter) ? \"header--center\" : \"\"}`;\n    return (\n        <header className={className}>\n            <h1 className=\"header__h1\">{text}</h1>\n        </header>\n    )\n}\n\nHeader.propTypes = {\n    text: PropTypes.string.isRequired,\n    isCenter: PropTypes.bool,\n}\n\nexport default Header;"],"sourceRoot":""}