{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/socialFooter.js","webpack:///./src/components/logo.js","webpack:///./src/components/nav.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","SocialFooter","external","email","react__WEBPACK_IMPORTED_MODULE_1___default","className","href","map","e","key","id","link","target","rel","src","image","alt","Logo","_4065101138","react_default","gatsby_image_default","fluid","file","childImageSharp","Nav","links","navActive","onNavClick","gatsby_browser_entry","to","logo","onClick","filter","item","ready","index","activeClassName","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Footer","siteLinks","s","i","Date","getFullYear","Layout","_useState","useState","setNavActive","nav","allInternalNavJson","nodes","socialFooter","allExternalNavJson","components_footer","_3406259466"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJV,EAAAY,EAAAV,EAAA,sBAAAW,IAAA,IAAAV,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAW,EAAAd,EAAA,IAAAe,EAAAf,EAAAK,EAAAS,GAAAd,EAAAY,EAAAV,EAAA,sBAAAa,EAAAN,IAAAT,EAAA,KAAAA,EAAA,IAcyBgB,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATC,GAA2E,IAAxCC,EAAwCD,EAAxCC,gBAAiBC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,OACzDC,EAAYH,EACdA,EAAKA,KACLD,EAAgBE,IAAUF,EAAgBE,GAAOD,KAErD,OACEpB,EAAAK,EAAAC,cAACN,EAAAK,EAAMmB,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAavB,EAAAK,EAAAC,cAAA,qCAKrB,IAAMG,EAAc,SAAAgB,GAAS,IACnBL,EAAkCK,EAAlCL,KAAMC,EAA4BI,EAA5BJ,MAAOC,EAAqBG,EAArBH,OAAQI,EAAaD,EAAbC,SAE7B,OACE1B,EAAAK,EAAAC,cAACQ,EAAmBa,SAApB,KACG,SAAAR,GAAe,OACdnB,EAAAK,EAAAC,cAACW,EAAD,CACEG,KAAMA,EACNC,MAAOA,EACPC,OAAQA,GAAUI,EAClBP,gBAAiBA,4BCzC3B,IAAsBS,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8bCsBhCK,UAjBU,SAAAf,GAAiC,IAA9BgB,EAA8BhB,EAA9BgB,SAAUC,EAAoBjB,EAApBiB,cACpC,OAAKA,EAGEpB,IAAMT,cAAc8B,+UAApBC,CAAA,CACLH,WACAC,iBACGA,EAAcG,OALV,+7CCwBIC,IA3BM,SAAArB,GAAA,IAAGsB,EAAHtB,EAAGsB,SAAUC,EAAbvB,EAAauB,MAAb,OACnBC,EAAArC,EAAAC,cAAA,OAAKqC,UAAU,kBACXF,EACAC,EAAArC,EAAAC,cAAA,KAAGsC,KAAI,UAAYH,EAASE,UAAU,yBACpCD,EAAArC,EAAAC,cAAA,0BACAoC,EAAArC,EAAAC,cAAA,YAAOmC,IAEP,KAEHD,EAASK,IAAI,SAAAC,GAAC,OACbJ,EAAArC,EAAAC,cAAA,KAAGyC,IAAKD,EAAEE,GAAIJ,KAAME,EAAEG,KAAMN,UAAU,uBAAuBO,OAAO,SAASC,IAAI,uBAC/ET,EAAArC,EAAAC,cAAA,OAAK8C,IAAKN,EAAEO,MAAOC,IAAKR,EAAEQ,IAAKX,UAAU,8HCgBlCY,EAhBF,WACX,IAAMnC,EAAIoC,EAAApC,KAYV,OAAOqC,EAAApD,EAAAC,cAACoD,EAAArD,EAAD,CAAKsC,UAAU,OAAOW,IAAI,oBAAoBK,MAAOvC,EAAKwC,KAAKC,gBAAgBF,SCwBzEG,IA/CH,SAAA5C,GAAA,IAAG6C,EAAH7C,EAAG6C,MAAOC,EAAV9C,EAAU8C,UAAWC,EAArB/C,EAAqB+C,WAAYvC,EAAjCR,EAAiCQ,SAAjC,OACV+B,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,OACbc,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,eACXc,EAAApD,EAAAC,cAAC4D,EAAA,EAAD,CAAMC,GAAG,IAAIxB,UAAU,aACrBc,EAAApD,EAAAC,cAAC8D,EAAD,OAGFX,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,mBACfc,EAAApD,EAAAC,cAAA,OACIqC,UAAS,WAAYqB,EAAY,iBAAmB,IACpDK,QAASJ,MAKjBR,EAAApD,EAAAC,cAAA,OAAKqC,UAAS,gBAAiBqB,EAAY,sBAAwB,KACjEP,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,aACXoB,EAASA,EAAMO,OAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAO3B,IAAI,SAAC0B,EAAME,GAAP,OAChDhB,EAAApD,EAAAC,cAAC4D,EAAA,EAAD,CACInB,IAAKwB,EAAKvB,GACVmB,GAAII,EAAKtB,KACTN,UAAU,kBACV+B,gBAAgB,2BAEfH,EAAKhE,SAEL,MAEPkD,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,iBACZjB,sqCCtBT,SAASiD,EAATzD,GAAiD,IAAlC0D,EAAkC1D,EAAlC0D,YAAaC,EAAqB3D,EAArB2D,KAAMC,EAAe5D,EAAf4D,KAAMvE,EAASW,EAATX,MAC9BwE,EADuCC,EAAA5D,KACvC2D,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACElC,EAAArC,EAAAC,cAAC6E,EAAA9E,EAAD,CACE+E,eAAgB,CACdP,QAEFtE,MAAOA,EACP8E,cAAa,QAAUN,EAAKG,aAAa3E,MACzCuE,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAShF,GAEX,CACEiF,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAAShF,GAEX,CACE+E,KAAI,sBACJC,QAASN,IAEXS,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED,iSCpCAiB,iBA9CA,SAAA1E,GAAA,IAAG2E,EAAH3E,EAAG2E,UAAWnE,EAAdR,EAAcQ,SAAd,OACb+B,EAAApD,EAAAC,cAAA,UAAQqC,UAAU,UACdc,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,iCACbc,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,sBACbc,EAAApD,EAAAC,cAAA,0BACAmD,EAAApD,EAAAC,cAAA,0IAKFmD,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,sBAIfc,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,qBACbc,EAAApD,EAAAC,cAAA,wBACAmD,EAAApD,EAAAC,cAAA,MAAIqC,UAAU,2BACXkD,EAAUvB,OAAO,SAAAwB,GAAC,OAAIA,EAAEtB,QAAO3B,IAAI,SAACiD,EAAGC,GAAJ,OAClCtC,EAAApD,EAAAC,cAAA,MAAIyC,IAAKgD,GACPtC,EAAApD,EAAAC,cAAC4D,EAAA,EAAD,CAAMvB,UAAU,OAAOwB,GAAI2B,EAAE7C,MAAO6C,EAAEvF,aAMhDkD,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,oCACbc,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,6BAAf,kBACiB,IAAIqD,MAAOC,cAD5B,mBAGExC,EAAApD,EAAAC,cAAA,KAAGqC,UAAU,OAAOC,KAAK,2BAA2BM,OAAO,SAASC,IAAI,uBAAxE,WAEDzB,sBCsCMwE,IA/BA,SAAAhF,GAAkB,IAAfQ,EAAeR,EAAfQ,SAAeyE,EACGC,oBAAS,GAApCpC,EADwBmC,EAAA,GACbE,EADaF,EAAA,GAG/B,OACE1C,EAAApD,EAAAC,cAAC4D,EAAA,EAAD,CAAa7C,MA/BJ,aA+BoBC,OAAS,SAAAF,GAAI,OACxCqC,EAAApD,EAAAC,cAAA,OAAKqC,UAAU,QACbc,EAAApD,EAAAC,cAACgG,EAAA,EAAD,CACEvC,MAAO3C,EAAKmF,mBAAmBC,MAC/BxC,UAAWA,EACXC,WAAY,kBAAMoC,GAAcrC,KAEhCP,EAAApD,EAAAC,cAACmG,EAAA,EAAD,CACEjE,SAAUpB,EAAKsF,mBAAmBF,MAClC/D,MAAOrB,EAAK2D,KAAKG,aAAazC,SAGlCgB,EAAApD,EAAAC,cAAA,QAAMqC,UAAU,iBAAiBjB,GAC/B+B,EAAApD,EAAAC,cAACqG,EAAD,CAAQd,UAAWzE,EAAKmF,mBAAmBC,OACzC/C,EAAApD,EAAAC,cAACmG,EAAA,EAAD,CACEjE,SAAUpB,EAAKsF,mBAAmBF,WAf5CpF,KAAAwF","file":"component---src-pages-404-js-7f4ae3a53a0e5700da07.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport \"./socialFooter.scss\"\n\nconst SocialFooter = ({ external, email }) => (\n  <div className=\"footer--social\">\n    {(email) ?\n      <a href={`mailto:${email}`} className=\"footer--social__email\">\n        <span>Let's Talk</span>\n        <span>{email}</span>\n      </a>\n      : null\n    }\n    {external.map(e =>\n      <a key={e.id} href={e.link} className=\"footer--social__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={e.image} alt={e.alt} className=\"footer--social__icon\" />\n      </a>\n    )}\n  </div>\n)\n\nSocialFooter.propTypes = {\n  external: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired\n  })).isRequired,\n  email: PropTypes.string\n}\n\nexport default SocialFooter;\n\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query GetLogoImage {\n      file(relativePath: { eq: \"images/logo.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return <Img className=\"logo\" alt=\"Alec Di Vito logo\" fluid={data.file.childImageSharp.fluid} />\n}\n\nexport default Logo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport Logo from \"./logo\"\n\nconst Nav = ({ links, navActive, onNavClick, children }) => (\n  <nav className=\"nav\">\n    <div className=\"nav--header\">\n        <Link to=\"/\" className=\"nav__logo\">\n          <Logo />\n        </Link>\n\n        <div className=\"burger--wrapper\">\n        <div\n            className={`burger ${navActive ? \"burger--active\" : \"\"}`}\n            onClick={onNavClick}\n        />\n        </div>\n    </div>\n\n    <div className={`nav__mobile ${navActive ? \"nav__list--dropdown\" : \"\"}`}>\n      <div className=\"nav__list\">\n        {(links) ? links.filter(item => item.ready).map((item, index) => (\n        <Link\n            key={item.id}\n            to={item.link}\n            className=\"nav__list__item\"\n            activeClassName=\"nav__list__item--active\"\n        >\n            {item.title}\n        </Link>\n        )) : null}\n      </div>\n      <div className=\"nav__children\">\n        {children}\n      </div>\n    </div>\n  </nav>\n)\n\nNav.propTypes = {\n    links: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        ready: PropTypes.bool.isRequired\n    })).isRequired,\n    navActive: PropTypes.bool.isRequired,\n    onNavClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired\n}\n\nexport default Nav;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from 'prop-types';\nimport \"./footer.scss\";\n\nconst Footer = ({ siteLinks, children }) => (\n  <footer className=\"footer\">\n      <div className=\"footer__top layout--max-width\">\n        <div className=\"footer__top__about\">\n          <h3>Alec Di Vito</h3>\n          <p>\n            I'm a creative, ambitious, and enterprising software engineer as well as\n            an aspiring designer and machine learning engineer.\n          </p>\n        </div>\n        <div className=\"footer__top__blog\">\n          {/* <h3>Latest Blogs</h3>\n          <ul></ul> */}\n        </div>\n        <div className=\"footer__top__site\">\n          <h3>Site Links</h3>\n          <ul className=\"footer__top__site__list\">\n            {siteLinks.filter(s => s.ready).map((s, i) => (\n              <li key={i}>\n                <Link className=\"link\" to={s.link}>{s.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"footer__bottom layout--max-width\">\n        <div className=\"footer__bottom__copyright\">\n          Alec Divito © {new Date().getFullYear()}, Built with\n          {` `}\n          <a className=\"link\" href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a>\n        </div>\n        {children}\n      </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteLinks: PropTypes.arrayOf(PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    ready: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  children: PropTypes.node\n}\n\nexport default Footer;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Nav from \"./nav\";\nimport Footer from \"./footer\";\nimport SocialFooter from \"./socialFooter\";\nimport \"./layout.scss\";\n\nconst navData = graphql`\nquery GetNavData {\n  allExternalNavJson {\n    nodes {\n      id\n      image\n      link\n      alt\n    }\n  }\n  allInternalNavJson {\n    nodes {\n      id\n      link\n      ready\n      title\n    }\n  }\n  site {\n    siteMetadata {\n      email\n      title\n    }\n  }\n}\n`;\n\nconst Layout = ({ children }) => {\n  const [navActive, setNavActive] = useState(false);\n\n  return (\n    <StaticQuery query={navData} render={ data => (\n      <div className=\"page\">\n        <Nav\n          links={data.allInternalNavJson.nodes}\n          navActive={navActive}\n          onNavClick={() => setNavActive(!navActive)}\n        >\n          <SocialFooter\n            external={data.allExternalNavJson.nodes}\n            email={data.site.siteMetadata.email}\n          />\n        </Nav>\n        <main className=\"page--content\">{children}</main>\n          <Footer siteLinks={data.allInternalNavJson.nodes}>\n            <SocialFooter\n              external={data.allExternalNavJson.nodes}\n            />\n          </Footer>\n      </div>\n    )} />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}