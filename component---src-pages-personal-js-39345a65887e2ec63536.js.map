{"version":3,"sources":["webpack:///./src/pages/personal.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/logo.js","webpack:///./src/components/nav.js","webpack:///./src/components/footer.js","webpack:///./src/components/socialFooter.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js"],"names":["PersonalsPage","data","_public_static_d_2319484665_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","className","_components_header__WEBPACK_IMPORTED_MODULE_7__","text","isCenter","allProjectsJson","nodes","map","t","key","id","blogPost","href","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fluid","image","childImageSharp","stage","description","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","technologies","tag","i","siteLink","target","rel","alt","src","githubLink","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","Logo","_4065101138","react_default","gatsby_image_default","file","Nav","links","navActive","onNavClick","gatsby_browser_entry","logo","onClick","filter","item","ready","index","link","activeClassName","Footer","siteLinks","s","Date","getFullYear","SocialFooter","external","email","e","Layout","_useState","useState","setNavActive","isHome","window","pathname","nav","allInternalNavJson","components_socialFooter","allExternalNavJson","site","siteMetadata","components_footer","_3406259466","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header"],"mappings":"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","file":"component---src-pages-personal-js-39345a65887e2ec63536.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nimport \"./personal.scss\";\nimport Header from \"../components/header\";\n\nconst query = graphql`\nquery GetPersonalProjectsData {\n    allProjectsJson {\n        nodes {\n            id\n            stage\n            title\n            technologies\n            description\n            blogPost\n            image {\n                childImageSharp {\n                    fluid {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n            githubLink\n            siteLink\n        }\n    }\n}\n`\n\nconst PersonalsPage = () => {\n    const data = useStaticQuery(query)\n\n    return (\n        <Layout>\n            <SEO title=\"Projects\" />\n            <section className=\"personal layout--max-width\">\n                <Header text=\"Featured Personal Projects\" isCenter={true} />\n                <p className=\"personal__description\">These are the projects that I'm most proud of and like to show off!</p>\n                <div className=\"personal__cards\">\n                {data.allProjectsJson.nodes.map((t) =>\n                    <div className=\"card\" key={t.id} >\n                        <a\n                            className={`${(t.blogPost) ? \"\" : \"card__image--no-link\"}`}\n                            href={(t.blogPost) ? t.blogPost : \"javascript:void(0);\"}>\n                            <Img className=\"card__image\" fluid={t.image.childImageSharp.fluid} />\n                        </a>\n                        <div className=\"card__content\">\n                            <div className=\"card__header\">\n                                <h3>{t.title}</h3>\n                                <h5>{t.stage}</h5>\n                            </div>\n                            <p className=\"card__description\">\n                                {t.description}\n                            </p>\n                            {(t.blogPost) ?\n                                <Link className=\"card__read-more\" to={t.blogPost}>Read more...</Link>\n                                : null\n                            }\n                            <div className=\"card__footer\">\n                                <div className=\"card__footer__tags\">\n                                    {t.technologies.map((tag, i) => <span className=\"tag\" key={i} >{tag}</span>)}\n                                </div>\n                                <div className=\"card__footer__links\">\n                                    {(t.siteLink)\n                                        ? <a href={t.siteLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"card__footer__links__link\" alt=\"Site Url for title\" src=\"/svgs/link.svg\" />\n                                        </a>\n                                        : null\n                                    }\n                                    {(t.githubLink)\n                                        ? <a href={t.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"card__footer__links__link\" alt=\"Github Url for title\" src=\"/svgs/github-square.svg\" />\n                                        </a>\n                                        : null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                    {/* <div className=\"card\">\n                        View Work\n                    </div> */}\n                </div>\n            </section>\n            {/* <section className=\"personal layout--max-width\">\n                <Header text=\"Other Personal Project\" isCenter={true} />\n                <p className=\"personal__description\">\n                    These are projects I worked on when I was younger and less experienced\n                    or just weren't able to fully finish\n                </p>\n            </section> */}\n        </Layout>\n    )\n};\n\nexport default PersonalsPage;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query GetLogoImage {\n      file(relativePath: { eq: \"images/logo.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return <Img className=\"logo\" alt=\"Alec Di Vito logo\" fluid={data.file.childImageSharp.fluid} />\n}\n\nexport default Logo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport Logo from \"./logo\"\n\nconst Nav = ({ links, navActive, onNavClick, children }) => (\n  <nav className=\"nav\">\n    <div className=\"nav--header\">\n        <Link to=\"/\" className=\"nav__logo\">\n          <Logo />\n        </Link>\n\n        <div className=\"burger--wrapper\">\n        <div\n            className={`burger ${navActive ? \"burger--active\" : \"\"}`}\n            onClick={onNavClick}\n        />\n        </div>\n    </div>\n\n    <div className={`nav__mobile ${navActive ? \"nav__list--dropdown\" : \"\"}`}>\n      <div className=\"nav__list\">\n        {(links) ? links.filter(item => item.ready).map((item, index) => (\n        <Link\n            key={item.id}\n            to={item.link}\n            className=\"nav__list__item\"\n            activeClassName=\"nav__list__item--active\"\n        >\n            {item.title}\n        </Link>\n        )) : null}\n      </div>\n      <div className=\"nav__children\">\n        {children}\n      </div>\n    </div>\n  </nav>\n)\n\nNav.propTypes = {\n    links: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        ready: PropTypes.bool.isRequired\n    })).isRequired,\n    navActive: PropTypes.bool.isRequired,\n    onNavClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired\n}\n\nexport default Nav;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from 'prop-types';\nimport \"./footer.scss\";\n\nconst Footer = ({ siteLinks, children }) => (\n  <footer className=\"footer\">\n      <div className=\"footer__top layout--max-width\">\n        <div className=\"footer__top__about\">\n          <h3>Alec Di Vito</h3>\n          <p>\n            I'm a creative, ambitious, and enterprising software engineer as well as\n            an aspiring designer and machine learning engineer.\n          </p>\n        </div>\n        <div className=\"footer__top__blog\">\n          {/* <h3>Latest Blogs</h3>\n          <ul></ul> */}\n        </div>\n        <div className=\"footer__top__site\">\n          <h3>Site Links</h3>\n          <ul className=\"footer__top__site__list\">\n            {siteLinks.filter(s => s.ready).map((s, i) => (\n              <li key={i}>\n                <Link className=\"link\" to={s.link}>{s.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"footer__bottom layout--max-width\">\n        <div className=\"footer__bottom__copyright\">\n          Alec Divito © {new Date().getFullYear()}, Built with\n          {` `}\n          <a className=\"link\" href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a>\n        </div>\n        {children}\n      </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteLinks: PropTypes.arrayOf(PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    ready: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  children: PropTypes.node\n}\n\nexport default Footer;","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport \"./socialFooter.scss\"\n\nconst SocialFooter = ({ external, email }) => (\n  <div className=\"footer--social\">\n    {(email) ?\n      <a href={`mailto:${email}`} className=\"footer--social__email\">\n        <span>Let's Talk</span>\n        <span>{email}</span>\n      </a>\n      : null\n    }\n    {external.map(e =>\n      <a key={e.id} href={e.link} className=\"footer--social__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={e.image} alt={e.alt} className=\"footer--social__icon\" />\n      </a>\n    )}\n  </div>\n)\n\nSocialFooter.propTypes = {\n  external: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired\n  })).isRequired,\n  email: PropTypes.string\n}\n\nexport default SocialFooter;\n\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Nav from \"./nav\";\nimport Footer from \"./footer\";\nimport SocialFooter from \"./socialFooter\";\nimport \"./layout.scss\";\n\nconst navData = graphql`\nquery GetNavData {\n  allExternalNavJson {\n    nodes {\n      id\n      image\n      link\n      alt\n    }\n  }\n  allInternalNavJson {\n    nodes {\n      id\n      link\n      ready\n      title\n    }\n  }\n  site {\n    siteMetadata {\n      email\n      title\n    }\n  }\n}\n`;\n\nconst Layout = ({ children }) => {\n  const [navActive, setNavActive] = useState(false);\n\n  let isHome = false;\n  if (window.location.pathname === \"/\") {\n    isHome = true;\n  }\n\n  return (\n    <StaticQuery query={navData} render={ data => (\n      <div className=\"page\">\n        <Nav\n          links={data.allInternalNavJson.nodes}\n          navActive={navActive}\n          onNavClick={() => setNavActive(!navActive)}\n        >\n          <SocialFooter\n            external={data.allExternalNavJson.nodes}\n            email={data.site.siteMetadata.email}\n          />\n        </Nav>\n        <main className=\"page--content\">{children}</main>\n        {(!isHome) ?\n          <Footer siteLinks={data.allInternalNavJson.nodes}>\n            <SocialFooter\n              external={data.allExternalNavJson.nodes}\n            />\n          </Footer>\n          : null\n        }\n      </div>\n    )} />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./header.scss\";\n\nconst Header = ({text, isCenter}) => {\n    const className = `header ${(isCenter) ? \"header--center\" : \"\"}`;\n    return (\n        <header className={className}>\n            <h1 className=\"header__h1\">{text}</h1>\n        </header>\n    )\n}\n\nHeader.propTypes = {\n    text: PropTypes.string.isRequired,\n    isCenter: PropTypes.bool,\n}\n\nexport default Header;"],"sourceRoot":""}