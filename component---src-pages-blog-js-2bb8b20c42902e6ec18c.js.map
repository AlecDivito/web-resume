{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/logo.js","webpack:///./src/components/nav.js","webpack:///./src/components/footer.js","webpack:///./src/components/socialFooter.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_header__WEBPACK_IMPORTED_MODULE_4__","BlogDirectoryPage","a","createElement","title","className","text","isCenter","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","Logo","_4065101138","react_default","gatsby_image_default","alt","fluid","file","childImageSharp","Nav","links","navActive","onNavClick","gatsby_browser_entry","to","logo","onClick","filter","item","ready","map","index","key","id","link","activeClassName","Footer","siteLinks","s","i","Date","getFullYear","href","target","rel","SocialFooter","external","email","e","src","image","navData","Layout","_useState","useState","setNavActive","nav","allInternalNavJson","nodes","components_socialFooter","allExternalNavJson","site","siteMetadata","components_footer","_3406259466","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header"],"mappings":"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","file":"component---src-pages-blog-js-2bb8b20c42902e6ec18c.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"./blog.scss\";\nimport Header from \"../components/header\";\n\nconst BlogDirectoryPage = () => (\n  <Layout>\n    <SEO title=\"Alec's Personal Blog\" />\n    <section className=\"blog\">\n      <Header text=\"Hey, The blog is under construction!\" isCenter={true} />\n      <p>\n        Sorry for the inconvenience, currently the site is still being built\n        and all the main small kinks are still being worked out. I'm hopping to\n        have it operational before september 2019.\n      </p>\n      <p>\n        If you wondering what will be written in the blog, I'll mostly be focusing\n        on mathematic topic I learn (which will probably be basic and used as a\n        way to keep me studying) and on case studies of some of my web designs\n        and the steps I take to make my web pages look good or at least decent.\n      </p>\n    </section>\n  </Layout>\n)\n\nexport default BlogDirectoryPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query GetLogoImage {\n      file(relativePath: { eq: \"images/logo.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return <Img className=\"logo\" alt=\"Alec Di Vito logo\" fluid={data.file.childImageSharp.fluid} />\n}\n\nexport default Logo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport Logo from \"./logo\"\n\nconst Nav = ({ links, navActive, onNavClick, children }) => (\n  <nav className=\"nav\">\n    <div className=\"nav--header\">\n        <Link to=\"/\" className=\"nav__logo\">\n          <Logo />\n        </Link>\n\n        <div className=\"burger--wrapper\">\n        <div\n            className={`burger ${navActive ? \"burger--active\" : \"\"}`}\n            onClick={onNavClick}\n        />\n        </div>\n    </div>\n\n    <div className={`nav__mobile ${navActive ? \"nav__list--dropdown\" : \"\"}`}>\n      <div className=\"nav__list\">\n        {(links) ? links.filter(item => item.ready).map((item, index) => (\n        <Link\n            key={item.id}\n            to={item.link}\n            className=\"nav__list__item\"\n            activeClassName=\"nav__list__item--active\"\n        >\n            {item.title}\n        </Link>\n        )) : null}\n      </div>\n      <div className=\"nav__children\">\n        {children}\n      </div>\n    </div>\n  </nav>\n)\n\nNav.propTypes = {\n    links: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        ready: PropTypes.bool.isRequired\n    })).isRequired,\n    navActive: PropTypes.bool.isRequired,\n    onNavClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired\n}\n\nexport default Nav;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from 'prop-types';\nimport \"./footer.scss\";\n\nconst Footer = ({ siteLinks, children }) => (\n  <footer className=\"footer\">\n      <div className=\"footer__top layout--max-width\">\n        <div className=\"footer__top__about\">\n          <h3>Alec Di Vito</h3>\n          <p>\n            I'm a creative, ambitious, and enterprising software engineer as well as\n            an aspiring designer and machine learning engineer.\n          </p>\n        </div>\n        <div className=\"footer__top__blog\">\n          {/* <h3>Latest Blogs</h3>\n          <ul></ul> */}\n        </div>\n        <div className=\"footer__top__site\">\n          <h3>Site Links</h3>\n          <ul className=\"footer__top__site__list\">\n            {siteLinks.filter(s => s.ready).map((s, i) => (\n              <li key={i}>\n                <Link className=\"link\" to={s.link}>{s.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"footer__bottom layout--max-width\">\n        <div className=\"footer__bottom__copyright\">\n          Alec Divito © {new Date().getFullYear()}, Built with\n          {` `}\n          <a className=\"link\" href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a>\n        </div>\n        {children}\n      </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteLinks: PropTypes.arrayOf(PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    ready: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  children: PropTypes.node\n}\n\nexport default Footer;","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport \"./socialFooter.scss\"\n\nconst SocialFooter = ({ external, email }) => (\n  <div className=\"footer--social\">\n    {(email) ?\n      <a href={`mailto:${email}`} className=\"footer--social__email\">\n        <span>Let's Talk</span>\n        <span>{email}</span>\n      </a>\n      : null\n    }\n    {external.map(e =>\n      <a key={e.id} href={e.link} className=\"footer--social__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={e.image} alt={e.alt} className=\"footer--social__icon\" />\n      </a>\n    )}\n  </div>\n)\n\nSocialFooter.propTypes = {\n  external: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired\n  })).isRequired,\n  email: PropTypes.string\n}\n\nexport default SocialFooter;\n\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Nav from \"./nav\";\nimport Footer from \"./footer\";\nimport SocialFooter from \"./socialFooter\";\nimport \"./layout.scss\";\n\nexport const navData = graphql`\nquery GetNavData {\n  allExternalNavJson {\n    nodes {\n      id\n      image\n      link\n      alt\n    }\n  }\n  allInternalNavJson {\n    nodes {\n      id\n      link\n      ready\n      title\n    }\n  }\n  site {\n    siteMetadata {\n      email\n      title\n    }\n  }\n}\n`;\n\nconst Layout = ({ children }) => {\n  const [navActive, setNavActive] = useState(false);\n\n  return (\n    <StaticQuery query={navData} render={ data => (\n      <div className=\"page\">\n        <Nav\n          links={data.allInternalNavJson.nodes}\n          navActive={navActive}\n          onNavClick={() => setNavActive(!navActive)}\n        >\n          <SocialFooter\n            external={data.allExternalNavJson.nodes}\n            email={data.site.siteMetadata.email}\n          />\n        </Nav>\n        <main className=\"page--content\">{children}</main>\n          <Footer siteLinks={data.allInternalNavJson.nodes}>\n            <SocialFooter\n              external={data.allExternalNavJson.nodes}\n            />\n          </Footer>\n      </div>\n    )} />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./header.scss\";\n\nconst Header = ({text, isCenter}) => {\n    const className = `header ${(isCenter) ? \"header--center\" : \"\"}`;\n    return (\n        <header className={className}>\n            <h1 className=\"header__h1\">{text}</h1>\n        </header>\n    )\n}\n\nHeader.propTypes = {\n    text: PropTypes.string.isRequired,\n    isCenter: PropTypes.bool,\n}\n\nexport default Header;"],"sourceRoot":""}