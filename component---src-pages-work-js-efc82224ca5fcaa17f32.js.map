{"version":3,"sources":["webpack:///./src/pages/work.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/logo.js","webpack:///./src/components/nav.js","webpack:///./src/components/footer.js","webpack:///./src/components/socialFooter.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js"],"names":["WorkPage","data","_public_static_d_3521003519_json__WEBPACK_IMPORTED_MODULE_0__","options","year","month","endDate","Date","endFormat","Intl","DateTimeFormat","format","startDate","startFormat","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","className","_components_header__WEBPACK_IMPORTED_MODULE_6__","text","isCenter","endyear","startyear","allWorkJson","nodes","map","w","key","id","position","company","description","allSkillsJson","t","section","skills","s","index","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","rel","href","target","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","Logo","_4065101138","react_default","gatsby_image_default","alt","fluid","file","childImageSharp","Nav","links","navActive","onNavClick","gatsby_browser_entry","logo","onClick","filter","item","ready","link","activeClassName","Footer","siteLinks","i","getFullYear","SocialFooter","external","email","e","src","image","navData","Layout","_useState","useState","setNavActive","nav","allInternalNavJson","components_socialFooter","allExternalNavJson","site","siteMetadata","components_footer","_3406259466","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header"],"mappings":"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","file":"component---src-pages-work-js-efc82224ca5fcaa17f32.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport \"./work.scss\"\nimport Header from \"../components/header\";\n\nconst query = graphql`\nquery GetWorkData {\n  allWorkJson {\n    nodes {\n      company\n      description\n      endDate\n      id\n      position\n      startDate\n    }\n  }\n  allSkillsJson {\n    nodes {\n      id\n      skills\n      section\n    }\n  }\n}\n`;\n\nconst WorkPage = () => {\n  const data = useStaticQuery(query);\n\n  const options = { year: 'numeric', month: 'short'}\n  const endDate = new Date();\n  const endFormat = new Intl.DateTimeFormat('default', options).format(endDate);\n  const startDate = new Date(2015, 8);\n  const startFormat = new Intl.DateTimeFormat('default', options).format(startDate);\n  \n  return (\n    <Layout>\n      <SEO title=\"Professional Work\" />\n      <section className=\"work layout--max-width\">\n        <Header text=\"Professional Work\" isCenter={true} />\n        <p className=\"work__description\">\n          I've been fortunate enough to work with some amazing companies, and my experiences with them helped\n          to broaden my skills set and knowledge base. I'm proud that I have helped them raise their expectations of what Sheridan students are capable of.\n        </p>\n        <ul className=\"work__timeline\" endyear={endFormat} startyear={startFormat}>\n          <li className=\"work__timeline__event--circle--top\"></li>\n          {data.allWorkJson.nodes.map( w => (\n            <li key={w.id} className=\"work__timeline__event\">\n              <div className=\"work__timeline__event--circle\"></div>\n              <div className=\"work__timeline__event__details\">\n                <h3 className=\"event__header\">{w.position} <small>at</small> {w.company}</h3>\n                <p className=\"event__dates\">{w.startDate} - {w.endDate}</p>\n                <p className=\"event__description\">{w.description}</p>\n              </div>\n            </li>\n          ))}\n          <li className=\"work__timeline__event--circle--bottom\"></li>\n        </ul>\n      </section>\n      \n      <section className=\"skills--section layout--max-width\">\n        <Header text=\"Skills\" isCenter={true} />\n        <div className=\"skills\">\n          {data.allSkillsJson.nodes.map(t =>\n            <div className=\"skills__type\" key={t.id}>\n              <h3 className=\"skills__type__header\">{t.section}</h3>\n              <ul className=\"skills__type__list\">\n                {t.skills.map((s, index) =>\n                  <li key={index}>{s}</li>\n                )}\n              </ul>\n            </div>\n          )}\n        </div>\n      </section>\n\n      <section className=\"work layout--max-width\">\n        <Header text=\"Resume Download\" isCenter={true} />\n        <p className=\"work__description\">\n          If you're a digital or design agency, recruiter or just interested in\n          a hard copy of my resume as a PDF you can download it clicking the\n          button below.\n        </p>\n        <p className=\"work__description\">\n            If you want to know who I am as a person check out my\n            <Link className=\"link\" to=\"/about\">about page.</Link>\n        </p>\n        <div className=\"work__btn\">\n          <a className=\"link\"\n            rel=\"noopener noreferrer\"\n            href=\"AlecDivito-resume.pdf\" target=\"_blank\">\n              Download PDF\n          </a>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n\nexport default WorkPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query GetLogoImage {\n      file(relativePath: { eq: \"images/logo.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return <Img className=\"logo\" alt=\"Alec Di Vito logo\" fluid={data.file.childImageSharp.fluid} />\n}\n\nexport default Logo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport Logo from \"./logo\"\n\nconst Nav = ({ links, navActive, onNavClick, children }) => (\n  <nav className=\"nav\">\n    <div className=\"nav--header\">\n        <Link to=\"/\" className=\"nav__logo\">\n          <Logo />\n        </Link>\n\n        <div className=\"burger--wrapper\">\n        <div\n            className={`burger ${navActive ? \"burger--active\" : \"\"}`}\n            onClick={onNavClick}\n        />\n        </div>\n    </div>\n\n    <div className={`nav__mobile ${navActive ? \"nav__list--dropdown\" : \"\"}`}>\n      <div className=\"nav__list\">\n        {(links) ? links.filter(item => item.ready).map((item, index) => (\n        <Link\n            key={item.id}\n            to={item.link}\n            className=\"nav__list__item\"\n            activeClassName=\"nav__list__item--active\"\n        >\n            {item.title}\n        </Link>\n        )) : null}\n      </div>\n      <div className=\"nav__children\">\n        {children}\n      </div>\n    </div>\n  </nav>\n)\n\nNav.propTypes = {\n    links: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        ready: PropTypes.bool.isRequired\n    })).isRequired,\n    navActive: PropTypes.bool.isRequired,\n    onNavClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired\n}\n\nexport default Nav;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from 'prop-types';\nimport \"./footer.scss\";\n\nconst Footer = ({ siteLinks, children }) => (\n  <footer className=\"footer\">\n      <div className=\"footer__top layout--max-width\">\n        <div className=\"footer__top__about\">\n          <h3>Alec Di Vito</h3>\n          <p>\n            I'm a creative, ambitious, and enterprising software engineer as well as\n            an aspiring designer and machine learning engineer.\n          </p>\n        </div>\n        <div className=\"footer__top__blog\">\n          {/* <h3>Latest Blogs</h3>\n          <ul></ul> */}\n        </div>\n        <div className=\"footer__top__site\">\n          <h3>Site Links</h3>\n          <ul className=\"footer__top__site__list\">\n            {siteLinks.filter(s => s.ready).map((s, i) => (\n              <li key={i}>\n                <Link className=\"link\" to={s.link}>{s.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"footer__bottom layout--max-width\">\n        <div className=\"footer__bottom__copyright\">\n          Alec Divito © {new Date().getFullYear()}, Built with\n          {` `}\n          <a className=\"link\" href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a>\n        </div>\n        {children}\n      </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteLinks: PropTypes.arrayOf(PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    ready: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  children: PropTypes.node\n}\n\nexport default Footer;","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport \"./socialFooter.scss\"\n\nconst SocialFooter = ({ external, email }) => (\n  <div className=\"footer--social\">\n    {(email) ?\n      <a href={`mailto:${email}`} className=\"footer--social__email\">\n        <span>Let's Talk</span>\n        <span>{email}</span>\n      </a>\n      : null\n    }\n    {external.map(e =>\n      <a key={e.id} href={e.link} className=\"footer--social__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={e.image} alt={e.alt} className=\"footer--social__icon\" />\n      </a>\n    )}\n  </div>\n)\n\nSocialFooter.propTypes = {\n  external: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired\n  })).isRequired,\n  email: PropTypes.string\n}\n\nexport default SocialFooter;\n\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Nav from \"./nav\";\nimport Footer from \"./footer\";\nimport SocialFooter from \"./socialFooter\";\nimport \"./layout.scss\";\n\nexport const navData = graphql`\nquery GetNavData {\n  allExternalNavJson {\n    nodes {\n      id\n      image\n      link\n      alt\n    }\n  }\n  allInternalNavJson {\n    nodes {\n      id\n      link\n      ready\n      title\n    }\n  }\n  site {\n    siteMetadata {\n      email\n      title\n    }\n  }\n}\n`;\n\nconst Layout = ({ children }) => {\n  const [navActive, setNavActive] = useState(false);\n\n  return (\n    <StaticQuery query={navData} render={ data => (\n      <div className=\"page\">\n        <Nav\n          links={data.allInternalNavJson.nodes}\n          navActive={navActive}\n          onNavClick={() => setNavActive(!navActive)}\n        >\n          <SocialFooter\n            external={data.allExternalNavJson.nodes}\n            email={data.site.siteMetadata.email}\n          />\n        </Nav>\n        <main className=\"page--content\">{children}</main>\n          <Footer siteLinks={data.allInternalNavJson.nodes}>\n            <SocialFooter\n              external={data.allExternalNavJson.nodes}\n            />\n          </Footer>\n      </div>\n    )} />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./header.scss\";\n\nconst Header = ({text, isCenter}) => {\n    const className = `header ${(isCenter) ? \"header--center\" : \"\"}`;\n    return (\n        <header className={className}>\n            <h1 className=\"header__h1\">{text}</h1>\n        </header>\n    )\n}\n\nHeader.propTypes = {\n    text: PropTypes.string.isRequired,\n    isCenter: PropTypes.bool,\n}\n\nexport default Header;"],"sourceRoot":""}